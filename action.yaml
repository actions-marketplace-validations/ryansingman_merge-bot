name: "ryansingman/merge-bot"
description: "Deployment merge handler."
author: "Ryan Singman @ Cleanlab"
inputs:
  reviews_required: 
    description: "if reviews are required to merge"
    required: false
    default: true
  dependent_checks:
    description: "comma separated list of checks to depend on"
    required: false
    default: ""
  check_status_required:
    description: "status value(s) for check to be considered passed (as comma separated list)"
    required: false
    default: "success"
  blocking_label:
    description: "label to block merge on (leave empty to disable behavior)"
    required: false
    default: ""
  delete_branch:
    description: "if should delete source branch of PR after successful merge"
    required: false
    default: false
  merge_type:
    description: "type of merge to use (merge or fast-forward)"
    required: true
  

runs:
  using: composite

  steps:
    - if: contains(${{ github.event.pull_request.labels.*.name }}, ${{ inputs.blocking_label }})
      run: |
        echo "Stopping merge, blocking label detected."
        exit 1
      shell: bash

    # install Python dependencies for action
    - run: |
        pip install -r $GITHUB_ACTION_PATH/requirements.txt
      shell: bash

    # if reviews_required, check all reviews are passing
    - if: ${{ inputs.reviews_required }}
      run: |
        GITHUB_TOKEN=${{ github.token }} \
        python $GITHUB_ACTION_PATH/merge_bot/check_review_approval.py \
        --repository ${{ github.repository }}
        --pr-number ${{ github.event.number }}
      shell: bash

    # if dependent checks, check all checks have required check status

    # merge PR using merge type
        